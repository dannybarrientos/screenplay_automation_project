group 'com.ingjuanfg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.70")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'net.serenity-bdd.aggregator'
//apply plugin: "org.gradle.test-retry" version "1.4.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    serenityVersion = '2.0.70'
    serenityCucumberVersion = '1.0.4'
}

dependencies {
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-cucumber4:$rootProject.ext.serenityCucumberVersion"

    implementation "org.apache.poi:poi:3.17"
    implementation "org.apache.poi:poi-ooxml:3.17"
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation 'org.apache.logging.log4j:log4j-core:2.13.1'

    implementation "org.seleniumhq.selenium:selenium-java:3.141.59"

    testImplementation "junit:junit:4.12"
    testImplementation 'org.assertj:assertj-core:3.9.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.7'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

gradle.startParameter.continueOnFailure = true

tasks.withType(Test) {
    systemProperties = System.properties as Map<String, ?>
    maxParallelForks = Runtime.runtime.availableProcessors()
}

test {
    systemProperty 'properties', System.getProperty('properties')
}

//tasks.test {
//    retry {
//        maxRetries.set(2)
//        maxFailures.set(10)
//        failOnPassedAfterRetry.set(true)
//    }
//}